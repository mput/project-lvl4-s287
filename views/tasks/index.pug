extends /layouts/application.pug

block content
  .container-fluid.bg-light.p-0
    ul.nav.nav-tabs
      +navLink(urlFor('getTasks', 'all'), 'All tasks')
      +navLink(urlFor('getTasks', 'my'), 'My tasks')
      +navLink(urlFor('getTasks', 'forme'), 'For me')
  .container.bg-white.border.border-top-0.rounded
    .row.pt-4
      .col.flex-grow-0
        a.btn.btn-success(href=urlFor('newTask') role='button') New task
    .row.rounded-bottom.pt-3
      .col
        p.m-0
          a.dropdown-toggle(data-toggle='collapse' href='#formCollapse' role='button' aria-expanded='false' aria-controls='formCollapse') Filters
    .row.rounded-bottom.collapse#formCollapse(class= hasCustomFilter && 'show')
      .col
        +formFor(f, { url: path })
            .form-row
              .col-md-4.mb-3
                label Assigned to:
                +loneInput(f, 'assignedToUser', { pureNames: true })
              .col-md-4.mb-3
                label Status is:
                +loneSelect(f, 'hasStatusId', { pureNames: true })
                  +option('', 'Choose status:')
                  for status in statuses
                    +option(status.id, status.name, { selected: isSelectedOption(f.object.hasStatusId, status.id) })
              .col-md-4.mb-3
                label Tags:
                +loneInput(f, 'hasTags', { pureNames: true })
              .col-md-4.mb-3
                button.btn.btn-primary Apply
    .container-fluid.p-0.mt-2
      h2.h4.py-1.pl-2.border-bottom All tasks:
      table.table.table-borderless.mt-2
        thead
          tr
            th(scope='col')
            th(scope='col')
            th(scope='col') Creator
            th(scope='col') Assigned to
            th(scope='col') Status
        tbody
          mixin taskRow(task)
            - const { id, name, description, Creator, AssignedTo, Status, Tags } = task
            tr.table-info.border-bottom.border-white
              td.align-middle
                .btn-group
                  a.btn.btn-warning.btn-sm(href=urlFor('taskEdit', { id }) role='button') Edit
                  a.btn.btn-danger.btn-sm(href=urlFor('task', { id }) role='button' data-method='delete' rel='nofollow') Delete
              td.w-50
                h5.d-inline!= replaceTagsWithTagLinks(name, Tags)
                p.d-inline.mb-1= description
              td= Creator.fullName
              td
                if AssignedTo
                  = AssignedTo.fullName
                else
                  Task is not assigned yet.
              td.align-middle.text-center.bg-info
                p.h5.text-white= Status.name

          for task in tasks
            +taskRow(task)
